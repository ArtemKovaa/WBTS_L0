services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "20092:20092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "orders:1:1"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:20092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:20092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 700000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 700000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 700000000

  migrate:
    image: migrate/migrate
    container_name: migrate
    depends_on:
      postgres:
        condition: service_healthy
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:password@postgres:5432/postgres?sslmode=disable",
      "up"
    ]
    volumes:
      - ./migrations/postgres:/migrations

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      - migrate
      - kafka
    environment:
      DATABASE_URL: "postgres://postgres:password@postgres:5432/postgres?sslmode=disable"
      KAFKA_BROKER: "kafka:9092"
      KAFKA_ORDERS_TOPIC: "orders"
      KAFKA_GROUP_ID: "WBTS"
    ports:
      - "8081:8081"

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  pgdata:
